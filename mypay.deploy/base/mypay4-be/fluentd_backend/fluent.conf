# defines the source of the log file
<source>
  @type tail
  path /mypay4/logs/*.log
  pos_file /mypay4/logs/access_log.pos
  tag grokked_log
  keep_message_key true
  reserve_msg yes
  keep_keys message
  <parse>
      # @type grok
      #  <grok>
       #   pattern %{TIMESTAMP_ISO8601:timestamp} user=%{NOTSPACE:user} level=%{NOTSPACE:level} marker=%{WORD:marker} %{INT:pid} --- \[%{DATA:thread}\] %{NOTSPACE:category} : method=%{NOTSPACE:method} - elapsed_ms=%{INT:elapsed:integer} - %{SPACE} %{GREEDYDATA:msg}

       # </grok>
#        <grok>
#          pattern marker=%{WORD:valore2}%{GREEDYDATA:message1}
#        </grok>
#        <grok>
#          pattern elapsed_ms=%{NUMBER:valore1}
#        </grok>
#        <grok>
#          pattern %{GREEDYDATA:message}
#        </grok>

    @type multiline_grok
    grok_failure_key grokfailure
    #multiline_start_regexp ^(?>\d\d){1,2}-(?:0?[1-9]|1[0-2])-(?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9])[T ](?:2[0123]|[01]?[0-9]):?(?:[0-5][0-9])(?::?(?:(?:[0-5]?[0-9]|60)(?:[:.,][0-9]+)?))?(?:Z|[+-](?:2[0123]|[01]?[0-9])(?::?(?:[0-5][0-9])))?
    multiline_start_regexp /^\d{4}-\d{1,2}-\d{1,2} \d{1,2}:\d{1,2}:\d{1,2}\.\d{1,3}/
    <grok>
      pattern (?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}) user=%{NOTSPACE:user} level=%{NOTSPACE:level} marker=%{WORD:marker} %{INT:pid} --- \[%{DATA:thread}\] %{NOTSPACE:category} : method=%{GREEDYDATA:method} - elapsed_ms=%{INT:elapsed} - ro=%{NOTSPACE:ro} - %{GREEDYDATA:query}
      #my_timestamp %{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}
    </grok>
    <grok>
      pattern (?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}) user=%{NOTSPACE:user} level=%{NOTSPACE:level} marker=%{NOTSPACE:marker} %{INT:pid} --- \[%{NOTSPACE:thread}\] %{GREEDYDATA:url} method=%{NOTSPACE:method} - elapsed_ms=%{INT:elapsed_method}
    </grok>
    <grok>
      pattern (?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}) user=%{NOTSPACE:user} level=%{NOTSPACE:level} marker=%{NOTSPACE:marker} %{INT:pid} --- \[%{NOTSPACE:thread}\] %{GREEDYDATA:message} - elapsed_ms=%{INT:elapsed_method}
      #my_timestamp %{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}
    </grok>
    <grok>
      pattern (?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}) user=%{NOTSPACE:user} level=%{NOTSPACE:level} marker=%{NOTSPACE:marker} %{INT:pid} --- \[%{NOTSPACE:thread}\] %{GREEDYDATA:message}
      #my_timestamp %{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}
    </grok>
    #<grok>
    #  pattern ^-*%{TIMESTAMP_ISO8601:timestamp}\s*-*\s*%{LOGLEVEL:level}\s+%{NUMBER:pid}\s+---\s+\[\s*%{USERNAME:thread}\s*\]\s+%{DATA:class}\s*:\s*%{DATA:message}(?:\n%{GREEDYDATA:stack})?\n*$
    #</grok>    
    time_key timestamp # Extract the time value from the `timestamp` key
    time_type string # Expect a string timestamp
    time_format %Y-%m-%d %H:%M:%S.%N # Specify the timestamp format
	types timestamp:time:%Y-%m-%d %H:%M:%S.%L, elapsed:integer 
  </parse>
  read_from_head true
  tag "#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_PREFIX']}"
</source>

#<filter **>
#  @type record_transformer
#  enable_ruby
#  auto_typecast
#  <record>
#    Elapsed ${record["elapsed_string"].to_f}
#    ## usato per castare il valore di elapsed in numerico
#  </record>
#</filter>

 <filter **>
 
        @type record_transformer
		keep_time_key
		enable_ruby true
        renew_record true
        <record>
		data ${ record }
        time ${ time.iso8601() }
		
        hostname ${hostname}
        </record>
 </filter>

# Ship data to Elasticsearch
<match "#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_PREFIX']}">
  @type copy
  <store>
    @type elasticsearch
    include_tag_key true
    host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
    port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
    scheme "#{ENV['FLUENT_ELASTICSEARCH_SCHEME'] || 'https'}"
    ssl_verify "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERIFY'] || 'false'}"
    ssl_version "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERSION'] || 'TLSv1_2'}"
    user "#{ENV['FLUENT_ELASTICSEARCH_USER']}"
    password "#{ENV['FLUENT_ELASTICSEARCH_PASSWORD']}"
    logstash_format "#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_FORMAT'] || 'true'}"
    logstash_prefix "#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_PREFIX'] || 'mypay4_backend.access'}"
    flush_interval 10s
    # Disable the limit on the number of retries (retry forever).
    disable_retry_limit true
    log_es_400_reason true
  </store>
</match>

